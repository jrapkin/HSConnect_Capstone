@model IEnumerable<HSconnect.Models.ServiceOffered>
@{
    Layout = "~/Views/Shared/_Layout_SocialWorker.cshtml";
    ViewData["Title"] = "Resources";
}

<h1>Status</h1>


@*<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
    <title>Google Maps Multiple Markers</title>
    
</head>*@
<body>
    <div id="map" style="width: 500px; height: 400px;"></div>
    <script type="text/javascript">
        function initMap() {

            var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 10,
                center: new google.maps.LatLng(43.0343, -87.9115)
            });

            var contantInformation = @Html.Raw(Json.Serialize(Model.Select(c => new string[]{c.Provider.ProviderName, c.Provider.PhoneNumber, c.Provider.Email}).ToArray()));

            var infowindow = new google.maps.InfoWindow();

            var coordinatesArray = @Html.Raw(Json.Serialize(Model.Select(a => new double[]{a.Address.Lat, a.Address.Lng}).ToArray()));

            for (var i = 0; i < coordinatesArray.length; i++) {

                var marker = new google.maps.Marker({
                    position: new google.maps.LatLng(coordinatesArray[i][0], coordinatesArray[i][1]),
                    map: map
                });

                google.maps.event.addListener(marker, 'click', (function (marker, i) {
                    return function () {
                        infowindow.setContent(contantInformation[i][0] + '<br>' + contantInformation[i][1] + '<br>' + contantInformation[i][2]);
                        infowindow.open(map, marker);
                    }
                })(marker, i));
            }
        }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC1EFcPNZaoqx_naYg7PH_PZxWPpHtFt4c&callback=initMap"></script>
</body>



<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Provider.PhoneNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Demographic)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Cost)
            </th>

        </tr>
    </thead>

    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Address.StreetAddress)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Provider.PhoneNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Demographic)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Cost)
                </td>

            </tr>
        }
    </tbody>
</table>

