@model HSconnect.Models.ServiceOffered
@{
    ViewData["Title"] = "ViewResources";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>DisplayServices</h1>
<dl class="row">
    <dt class="col-sm-2">
        Name
    </dt>

    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.Provider.ProviderName) @Html.DisplayFor(model => model.Provider.ProviderName)
    </dd>
</dl>

<style>
    /* Set the size of the div element that contains the map */
    #map {
        height: 400px; /* The height is 400 pixels */
        width: 400px; /* The width is the width of the web page */
    }
</style>
<div class="row">
    <div id="map"></div>
    <script>


        // Initialize and add the map
        function initMap() {

            var coordinates = { lat: @Model.Address.Lat, lng: @Model.Address.Lng };

            var map = new google.maps.Map(document.getElementById('map'), { zoom: 8, center: coordinates });

            var marker = new google.maps.Marker({ position: coordinates, map: map });

        }
    </script>
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC1EFcPNZaoqx_naYg7PH_PZxWPpHtFt4c&callback=initMap">
    </script>
</div>

<div>
    <dl class="row">
        @if (Model.Address != null)
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Address.StreetAddress)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Address.StreetAddress)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Address.City)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Address.City)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Address.State)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Address.State)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Address.ZipCode)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Address.ZipCode)
            </dd>
        }
        @if (Model.Category != null)
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Category.Name)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Category.Name)
            </dd>
        }
        @if (Model.Demographic != null)
        {
            //TO DO: Add dictionary/viewdata to be able to display based on bool value
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Demographic)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Demographic)
            </dd>
        }
    </dl>
</div>


